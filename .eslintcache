[{"/Users/alejandraossajimenez/find_your_science_front_end/src/index.js":"1","/Users/alejandraossajimenez/find_your_science_front_end/src/App.js":"2","/Users/alejandraossajimenez/find_your_science_front_end/src/reportWebVitals.js":"3","/Users/alejandraossajimenez/find_your_science_front_end/src/pages/startPage.js":"4","/Users/alejandraossajimenez/find_your_science_front_end/src/pages/introQuestions.js":"5","/Users/alejandraossajimenez/find_your_science_front_end/src/pages/questions.js":"6","/Users/alejandraossajimenez/find_your_science_front_end/src/pages/resultsPage.js":"7","/Users/alejandraossajimenez/find_your_science_front_end/src/pages/stemProvides.js":"8","/Users/alejandraossajimenez/find_your_science_front_end/src/pages/missingScientist.js":"9","/Users/alejandraossajimenez/find_your_science_front_end/src/pages/careerPath.js":"10","/Users/alejandraossajimenez/find_your_science_front_end/src/pages/aboutUs.js":"11","/Users/alejandraossajimenez/find_your_science_front_end/src/components/navBarFol/navBar.js":"12","/Users/alejandraossajimenez/find_your_science_front_end/src/components/animatedCards/animatedCard.js":"13","/Users/alejandraossajimenez/find_your_science_front_end/src/components/animatedCards/animatedCardResults.js":"14","/Users/alejandraossajimenez/find_your_science_front_end/src/components/introText/smallQuestionsText.js":"15","/Users/alejandraossajimenez/find_your_science_front_end/src/components/introText/urgentQuestionsText.js":"16","/Users/alejandraossajimenez/find_your_science_front_end/src/components/introText/humanQuestionsText.js":"17","/Users/alejandraossajimenez/find_your_science_front_end/src/components/introText/bigQuestionsText.js":"18","/Users/alejandraossajimenez/find_your_science_front_end/src/components/footerFol/footer.js":"19","/Users/alejandraossajimenez/find_your_science_front_end/src/components/introText/Trail.js":"20"},{"size":306,"mtime":1610899098031,"results":"21","hashOfConfig":"22"},{"size":9268,"mtime":1610903349075,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1610894577506,"results":"24","hashOfConfig":"25"},{"size":1171,"mtime":1610895836700,"results":"26","hashOfConfig":"22"},{"size":1702,"mtime":1610896173000,"results":"27","hashOfConfig":"22"},{"size":2357,"mtime":1610895871118,"results":"28","hashOfConfig":"22"},{"size":5814,"mtime":1610896611341,"results":"29","hashOfConfig":"22"},{"size":1734,"mtime":1610895889095,"results":"30","hashOfConfig":"22"},{"size":4001,"mtime":1610896773663,"results":"31","hashOfConfig":"22"},{"size":5454,"mtime":1610896625882,"results":"32","hashOfConfig":"22"},{"size":2430,"mtime":1610896752936,"results":"33","hashOfConfig":"22"},{"size":3922,"mtime":1610895703798,"results":"34","hashOfConfig":"22"},{"size":1614,"mtime":1610896099698,"results":"35","hashOfConfig":"22"},{"size":1756,"mtime":1610896143718,"results":"36","hashOfConfig":"22"},{"size":529,"mtime":1610896345482,"results":"37","hashOfConfig":"22"},{"size":458,"mtime":1610896341422,"results":"38","hashOfConfig":"22"},{"size":445,"mtime":1610896351827,"results":"39","hashOfConfig":"22"},{"size":427,"mtime":1610896359041,"results":"40","hashOfConfig":"22"},{"size":2552,"mtime":1610896587478,"results":"41","hashOfConfig":"22"},{"size":882,"mtime":1610896690937,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1rpt9xm",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"thlizo",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"/Users/alejandraossajimenez/find_your_science_front_end/src/index.js",[],["90","91"],"/Users/alejandraossajimenez/find_your_science_front_end/src/App.js",["92","93"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Particles from \"react-particles-js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport StartPage from \"./pages/startPage\";\nimport IntroQuestions from \"./pages/introQuestions\";\nimport CareerPath from \"./pages/careerPath\";\nimport StemProvides from \"./pages/stemProvides\";\nimport Questions from \"./pages/questions\";\nimport ResultsPage from \"./pages/resultsPage\";\nimport AboutUs from \"./pages/aboutUs\";\nimport MissingScientistsForm from \"./pages/missingScientist\";\n\nimport BigQuestionsText from \"./components/introText/bigQuestionsText\";\nimport SmallQuestionsText from \"./components/introText/smallQuestionsText\";\nimport UrgentQuestionsText from \"./components/introText/urgentQuestionsText\";\nimport HumanQuestionsText from \"./components/introText/humanQuestionsText\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  particlesCanva: {\n    position: \"absolute\",\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  const [scientists, setScientists] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [programs, setPrograms] = useState([]);\n  const [scientistQuestions, setScientistQuestions] = useState([]);\n  const [scientistPrograms, setScientistPrograms] = useState([]);\n\n  const [selectedQuestion, setselectedQuestion] = useState(null);\n\n  //PopUp\n  const [open, setOpen] = useState(false);\n  const [selectedScientist, setselectedScientist] = useState(null);\n\n  // uniprograms\n  const [selectedItem, setselectedItem] = useState(false);\n  const [selectedPrograms, setselectedPrograms] = useState(null);\n  const [expanded, setExpanded] = useState(false);\n  const [selectedProgram, setselectedProgram] = useState(null);\n\n \n\n  useEffect(() => {\n    fetch(\"/api/scientists\")\n      .then((res) => res.json())\n      .then((data) => setScientists(data))\n      .catch((error) => console.log(error.message));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/questions\")\n      .then((res) => res.json())\n      .then((data) => setQuestions(data))\n      .catch((error) => console.log(error.message));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/uniprograms\")\n      .then((res) => res.json())\n      .then((data) => setPrograms(data))\n      .catch((error) => console.log(error.message));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/questions/scientists\")\n      .then((res) => res.json())\n      .then((data) => setScientistQuestions(data))\n      .catch((error) => console.log(error.message));\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/scientists/programs\")\n      .then((res) => res.json())\n      .then((data) => setScientistPrograms(data))\n      .catch((error) => console.log(error.message));\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n      <Particles\n        canvas\n        className={classes.particlesCanva}\n        params={{\n          particles: {\n            number: {\n              value: 100,\n              density: {\n                enable: true,\n                value_area: 600,\n              },\n            },\n            color: {\n              value: \"#ffffff\",\n            },\n            shape: {\n              type: \"star\",\n              stroke: {\n                width: 0,\n                color: \"#000000\",\n              },\n              polygon: {\n                nb_sides: 5,\n              },\n            },\n            opacity: {\n              value: 0.5,\n              random: false,\n              anim: {\n                enable: false,\n                speed: 1,\n                opacity_min: 0.1,\n                sync: false,\n              },\n            },\n            size: {\n              value: 2,\n              random: true,\n              anim: {\n                enable: false,\n                speed: 40,\n                size_min: 0.1,\n                sync: false,\n              },\n            },\n            line_linked: {\n              enable: true,\n              distance: 150,\n              color: \"#ffffff\",\n              opacity: 0.4,\n              width: 1,\n            },\n            move: {\n              enable: true,\n              speed: 3,\n              direction: \"none\",\n              random: false,\n              straight: false,\n              out_mode: \"out\",\n              attract: {\n                enable: false,\n                rotateX: 600,\n                rotateY: 1200,\n              },\n            },\n          },\n          interactivity: {\n            detect_on: \"canvas\",\n            events: {\n              onhover: {\n                enable: false,\n                mode: \"repulse\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"push\",\n              },\n              resize: true,\n            },\n            modes: {\n              grab: {\n                distance: 400,\n                line_linked: {\n                  opacity: 1,\n                },\n              },\n              bubble: {\n                distance: 400,\n                size: 40,\n                duration: 2,\n                opacity: 8,\n                speed: 3,\n              },\n              repulse: {\n                distance: 200,\n              },\n              push: {\n                particles_nb: 4,\n              },\n              remove: {\n                particles_nb: 2,\n              },\n            },\n          },\n          retina_detect: true,\n          config_demo: {\n            hide_card: false,\n            background_color: \"#b61924\",\n            background_image: \"\",\n            background_position: \"50% 50%\",\n            background_repeat: \"no-repeat\",\n            background_size: \"cover\",\n          },\n        }}\n      />\n      <Grid container>\n  {/* // direction=\"row\"\n  // justify=\"center\"\n  // alignItems=\"center\"> */}\n        \n    \n        <Switch>\n          <Route path=\"/missingscientist\" render={(props) => <MissingScientistsForm {...props} />} /> \n\n          <Route path=\"/aboutus\" render={(props) => <AboutUs {...props} />} />\n\n          <Route\n            path=\"/careerpath\"\n            render={(props) => (\n              <CareerPath\n                setselectedProgram={setselectedProgram}\n                selectedProgram={selectedProgram}\n                scientistPrograms={scientistPrograms}\n                selectedScientist={selectedScientist}\n                setExpanded={setExpanded}\n                expanded={expanded}\n                setselectedItem={setselectedItem}\n                selectedItem={selectedItem}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path=\"/resultspage\"\n            render={(props) => (\n              <ResultsPage\n                scientistQuestions={scientistQuestions}\n                selectedQuestion={selectedQuestion}\n                setOpen={setOpen}\n                open={open}\n                selectedScientist={selectedScientist}\n                setselectedScientist={setselectedScientist}\n                setselectedPrograms={setselectedPrograms}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path=\"/questions\"\n            render={(props) => (\n              <Questions\n                scientistQuestions={scientistQuestions}\n                questions={questions}\n                setselectedQuestion={setselectedQuestion}\n                {...props}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/stemprovides\"\n            render={(props) => <StemProvides {...props} />}\n          />\n\n          <Route\n            path=\"/humanquestions\"\n            render={(props) => (\n              <IntroQuestions\n                scientists={scientists}\n                path=\"/stemprovides\"\n                returnpath=\"/urgentquestions\"\n                id=\"19\"\n                TextComponent={HumanQuestionsText}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            path=\"/urgentquestions\"\n            render={(props) => (\n              <IntroQuestions\n                scientists={scientists}\n                path=\"/humanquestions\"\n                returnpath=\"/smallquestions\"\n                id=\"47\"\n                TextComponent={UrgentQuestionsText}\n                {...props}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/smallquestions\"\n            render={(props) => (\n              <IntroQuestions\n                scientists={scientists}\n                path=\"/urgentquestions\"\n                returnpath=\"/bigquestions\"\n                id=\"10\"\n                TextComponent={SmallQuestionsText}\n                {...props}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/bigquestions\"\n            render={(props) => (\n              <IntroQuestions\n                scientists={scientists}\n                path=\"/smallquestions\"\n                returnpath=\"/\"\n                id=\"52\"\n                TextComponent={BigQuestionsText}\n                {...props}\n              />\n            )}\n          />\n\n          <Route exact path=\"/\" render={(props) => <StartPage {...props} />} />\n        </Switch>\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/alejandraossajimenez/find_your_science_front_end/src/reportWebVitals.js",[],["94","95"],"/Users/alejandraossajimenez/find_your_science_front_end/src/pages/startPage.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/pages/introQuestions.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/pages/questions.js",["96"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./css/questions.css\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import ScientistCard from '../components/scientist'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    color: \"white\",\n    margin: 2,\n    width: 430,\n    background: \"none\",\n    \"&:hover\": {\n      background: \"#CD9C22\",\n    },\n    [theme.breakpoints.down(\"xs\")] : {\n      width: \"80%\",\n      height: \"auto\",\n      padding: 0,\n      marginRight: \"0.5em\"\n      },\n  },\n  typography: {\n     fontFamily: \"Playfair Display\",\n     fontSize: '0.9rem',\n  },\n  questionsList: {\n    [theme.breakpoints.down(\"xs\")] : {\n      width: \"80%\",\n      height: \"auto\",\n      padding: 0,\n      marginRight: \"0.5em\"\n      },\n    \n  },\n  returnbutton: {\n    margin: 50,\n    color: \"white\",\n  },\n}));\n\nconst Questions = ({ questions, scientistQuestions, setselectedQuestion }) => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleClick = (question) => {\n    setselectedQuestion(question.id);\n    let path = `/resultspage`;\n    history.push(path);\n  };\n\n  const handleReturn = (e) => {\n    let path = `/stemprovides`;\n    history.push(path);\n    console.log(\"it works\");\n  };\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className=\"questions\" xs={12}>\n      <Grid item xs={12} className={classes.returnbutton}>\n        <h2> What Would You Like To Do Today? </h2>\n      </Grid>\n\n      {questions &&\n        questions.map((question, index) => (\n          <Grid  item xs={12} sm={12} key={index} className={classes.questionsList}>\n            <Button\n              color=\"primary\"\n              variant=\"outlined\"\n              className={classes.button}\n              \n              onClick={() => handleClick(question)}\n            >\n              <Typography  className={classes.typography}>\n              {question.question_name}\n              </Typography>\n            </Button>\n          </Grid>\n        ))}\n\n      <Button className={classes.returnbutton} onClick={handleReturn}>\n        {\" \"}\n        Return{\" \"}\n      </Button>\n    </Grid>\n  );\n};\n\nexport default Questions;\n","/Users/alejandraossajimenez/find_your_science_front_end/src/pages/resultsPage.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/pages/stemProvides.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/pages/missingScientist.js",["97"],"import React, { useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase'\n\nimport NavBar from \"../components/navBarFol/navBar\";\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: \"purple\",\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:focus': {\n        borderRadius: 4,\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      },\n    },\n  }))(InputBase);\n\n  const useStyles = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }));\n  \nconst MissingScientistsForm = () => {\n    const classes = useStyles();\n    const [field, setField] = useState(null);\n    console.log(field)\n    \n    const handleChange = (event) => {\n    setField(event.target.value);\n    };\n\n    return ( \n        <div>\n        <NavBar />\n        <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"demo-customized-textbox\"> First Name </InputLabel>\n            <BootstrapInput id=\"demo-customized-textbox\" />\n        </FormControl>\n        <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"demo-customized-textbox\"> Last Name </InputLabel>\n            <BootstrapInput id=\"demo-customized-textbox\" />\n        </FormControl>\n\n        <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"demo-customized-textbox\"> Area of Expertise </InputLabel>\n            <BootstrapInput id=\"demo-customized-textbox\" />\n        </FormControl>\n        <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"demo-customized-textbox\"> Wikipedia Link </InputLabel>\n            <BootstrapInput id=\"demo-customized-textbox\" />\n        </FormControl>\n\n        <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-customized-select-label\"> Field </InputLabel>\n        <Select\n          labelId=\"demo-customized-select-label\"\n          id=\"demo-customized-select\"\n          placeholder=\"biology\"\n          value={field}\n          onChange={handleChange}\n          input={<BootstrapInput />}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n            <MenuItem value=\"Chemistry\">Chemistry</MenuItem>\n            <MenuItem value=\"Biology\">Biology</MenuItem>\n            <MenuItem value=\"Physics\">Physics</MenuItem>\n            <MenuItem value=\"Astronomy\"> Astronomy </MenuItem>\n            <MenuItem value=\"Mathematics\">Mathematics</MenuItem>\n            <MenuItem value=\"Engineering\">Engineering</MenuItem>\n            <MenuItem value=\"Computer science\">Computer science</MenuItem>\n            <MenuItem value=\"Neurobiology\">Neurobiology</MenuItem>\n            <MenuItem value=\"Enviromental Science\">Enviromental Science</MenuItem>\n            <MenuItem value=\"Planetary\">Planetary Science</MenuItem>\n            <MenuItem value=\"Material Science\">Materials Science</MenuItem>\n            <MenuItem value=\"Medicine\">Medicine</MenuItem>\n        </Select>\n      </FormControl>\n\n        </div>\n    );\n}\n\nexport default MissingScientistsForm;","/Users/alejandraossajimenez/find_your_science_front_end/src/pages/careerPath.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/pages/aboutUs.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/components/navBarFol/navBar.js",["98"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  bar: {\n    color: \"white\",\n    background: \"linear-gradient(45deg, #04053C 30%, #43156B 70%)\",\n    boxShadow: \"0 3px 5px 2px\",\n  },\n  button: {\n    width: 120,\n    height: 90,\n    margin: 2,\n    paddingTop: 20,\n    paddingBottom: 20,\n    color: \"white\",\n    background: \"none\",\n    \"&:hover\": {\n      background: \"#CD9C22\",\n    },\n    [theme.breakpoints.down(\"xs\")] : {\n      maxWidth: \"2.5em\",\n      height: \"3.5em\",\n      marginTop: \"1em\",\n      padding: \"none\",\n      },\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    marginLeft: theme.spacing(-1),\n  },\n  returnResults: {\n    color: \"white\",\n    [theme.breakpoints.down(\"xs\")] : {\n      width: \"100%\",\n      height: \"3em\",\n      padding: \"none\",\n      },\n  },\n  typography: {\n    fontFamily: \"Playfair Display\",\n    [theme.breakpoints.down(\"xs\")] : {\n      fontSize: \"1.5em\",\n      },\n    \n  },\n  typographyButton: {\n    fontFamily: \"Playfair Display\",\n    fontSize: 14,\n    [theme.breakpoints.down(\"xs\")] : {\n      fontSize: \"0.75em\",\n      }\n  },\n  \n}));\n\nconst NavBar = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n\n  const handleReturn = (e) => {\n    let path = `/questions`;\n    history.push(path);\n    console.log(\"it works\");\n  };\n\n  const handleClick = (e) => {\n    let path = `/aboutus`;\n    history.push(path);\n    console.log(\"it works\");\n  };\n\n  const handleClickMissing = (e) => {\n    let path = `/missingscientist`;\n    history.push(path);\n    console.log(\"it works\");\n  };\n  const handleReturnResults = (e) => {\n    let path = `/resultspage`;\n    history.push(path);\n    console.log(\"it works\");\n  };\n\n  return (\n    <AppBar className={classes.bar}>\n      <Toolbar>\n      <Grid container sm={12} >\n        <Grid item xs={12} s={2} sm={2} >\n          <Button\n            className={classes.returnResults}\n            onClick={handleReturnResults}\n          >\n            <Typography className={classes.typography} variant=\"h4\">\n              Find Your Science\n            </Typography>\n          </Button>\n        </Grid>\n        <Grid  container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" xs={12} s={10} sm={10} >\n         <Grid xs={3} s={2} sm={2}>\n          <Button variant=\"outlined\" className={classes.button} onClick={handleReturn}>\n           <Typography className={classes.typographyButton}>\n            return to Questions\n            </Typography>\n          </Button>\n          </Grid>\n          <Grid xs={3} s={2} sm={2}>\n            <Button\n              className={classes.button}\n              variant=\"outlined\"\n              onClick={handleClick}\n            >\n              <Typography className={classes.typographyButton}>\n                About Us\n              </Typography>\n            </Button>\n            </Grid>\n\n            <Grid xs={3} s={2} sm={2}>\n            <Button\n              className={classes.button}\n              variant=\"outlined\"\n            >\n              <Typography className={classes.typographyButton}>\n                Missing a Scientists?\n              </Typography>\n            </Button>\n            </Grid>\n            <Grid xs={3} s={2} sm={2}>\n            <Button className={classes.button} variant=\"outlined\">\n              <Typography className={classes.typographyButton}>\n                Missing a university program?\n              </Typography>\n            </Button>\n          </Grid>\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","/Users/alejandraossajimenez/find_your_science_front_end/src/components/animatedCards/animatedCard.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/components/animatedCards/animatedCardResults.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/components/introText/smallQuestionsText.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/components/introText/urgentQuestionsText.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/components/introText/humanQuestionsText.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/components/introText/bigQuestionsText.js",[],"/Users/alejandraossajimenez/find_your_science_front_end/src/components/footerFol/footer.js",[],["99","100"],"/Users/alejandraossajimenez/find_your_science_front_end/src/components/introText/Trail.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":35,"column":10,"nodeType":"107","messageId":"108","endLine":35,"endColumn":18},{"ruleId":"105","severity":1,"message":"109","line":47,"column":10,"nodeType":"107","messageId":"108","endLine":47,"endColumn":26},{"ruleId":"101","replacedBy":"110"},{"ruleId":"103","replacedBy":"111"},{"ruleId":"105","severity":1,"message":"112","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"113","line":7,"column":8,"nodeType":"107","messageId":"108","endLine":7,"endColumn":20},{"ruleId":"105","severity":1,"message":"114","line":81,"column":9,"nodeType":"107","messageId":"108","endLine":81,"endColumn":27},{"ruleId":"101","replacedBy":"115"},{"ruleId":"103","replacedBy":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'programs' is assigned a value but never used.","Identifier","unusedVar","'selectedPrograms' is assigned a value but never used.",["117"],["118"],"'useState' is defined but never used.","'NativeSelect' is defined but never used.","'handleClickMissing' is assigned a value but never used.",["117"],["118"],"no-global-assign","no-unsafe-negation"]